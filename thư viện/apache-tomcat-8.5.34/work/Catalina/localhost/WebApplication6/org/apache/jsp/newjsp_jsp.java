/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2019-03-09 13:31:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class newjsp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("        <script src=\"https://code.jquery.com/jquery-2.1.3.js\"></script>\n");
      out.write("        <link href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("        <script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js\"></script>\n");
      out.write("        <style>\n");
      out.write("            body{\n");
      out.write("                margin:0;\n");
      out.write("                padding:0;\n");
      out.write("                background: white;\n");
      out.write("            }\n");
      out.write("            .wrapper {\n");
      out.write("                width: 1140px;\n");
      out.write("                margin: 0 auto;\n");
      out.write("            }        \n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("\n");
      out.write("\n");
      out.write("        <div class=\"wrapper\">\n");
      out.write("            <h1>SHOPPING CART EXAMPLE</h1>\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div class=\"col-md-4\">\n");
      out.write("                    <div class=\"img-thumbnail\" style=\"border: 1px solid gray; width: 100%; height: 160px\"></div>\n");
      out.write("                    <div>\n");
      out.write("                        iPhone 6 Plus\n");
      out.write("                    </div>\n");
      out.write("                    <div>\n");
      out.write("                        Giá: 17.000.000đ\n");
      out.write("                    </div>\n");
      out.write("                    <button id=\"product-1\" data-name=\"iPhone 6 Plus\" data-price=\"17000000\" class=\"add-to-cart btn btn-primary\">Add to cart</button>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"col-md-4\">\n");
      out.write("                    <div class=\"img-thumbnail\" style=\"border: 1px solid gray; width: 100%; height: 160px\"></div>\n");
      out.write("                    <div>\n");
      out.write("                        Nokia Lumia 1520\n");
      out.write("                    </div>\n");
      out.write("                    <div>\n");
      out.write("                        Giá: 12.500.000đ\n");
      out.write("                    </div>\n");
      out.write("                    <button id=\"product-2\" data-name=\"Nokia Lumia 1520\" data-price=\"12500000\" class=\"add-to-cart btn btn-danger\">Add to cart</button>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"col-md-4\">\n");
      out.write("                    <div class=\"img-thumbnail\" style=\"border: 1px solid gray; width: 100%; height: 160px\"></div>\n");
      out.write("                    <div>\n");
      out.write("                        Samsung Galaxy Note 4\n");
      out.write("                    </div>\n");
      out.write("                    <div>\n");
      out.write("                        Giá: 18.500.000đ\n");
      out.write("                    </div>\n");
      out.write("                    <button id=\"product-3\" data-name=\"Samsung Galaxy Note 4\" data-price=\"18500000\" class=\"add-to-cart btn btn-info\">Add to cart</button>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <br />\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <table class=\"table table-bordered\" id=\"table-products\">\n");
      out.write("                    <thead>\n");
      out.write("                        <tr>\n");
      out.write("                            <th>Id</th>\n");
      out.write("                            <th>Name</th>\n");
      out.write("                            <th>Price</th>\n");
      out.write("                            <th>Quantity</th>\n");
      out.write("                            <th>Total</th>\n");
      out.write("                        </tr>\n");
      out.write("                    </thead>\n");
      out.write("                    <tbody></tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("            <div>\n");
      out.write("                <button class=\"btn btn-lg btn-success\" id=\"button-clear\">Clear</button>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"text-right\">\n");
      out.write("\n");
      out.write("                <hr />\n");
      out.write("                <address>\n");
      out.write("                    Developed by Ngo Thanh Tung - Softech Aptech\n");
      out.write("                </address>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
      out.write("<script>\n");
      out.write("    // Định nghĩa một mảng các phần tử sẽ bỏ vào giỏ hàng\n");
      out.write("    var shoppingCartItems = [];\n");
      out.write("\n");
      out.write("    $(document).ready(function () {\n");
      out.write("        // Kiểm tra nếu đã có sessionStorage[\"shopping-cart-items\"] hay chưa?\n");
      out.write("        if (sessionStorage[\"shopping-cart-items\"] != null) {\n");
      out.write("            shoppingCartItems = JSON.parse(sessionStorage[\"shopping-cart-items\"].toString());\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Hiển thị thông tin từ giỏ hàng\n");
      out.write("        displayShoppingCartItems();\n");
      out.write("    });\n");
      out.write("\n");
      out.write("\n");
      out.write("    // Sự kiện click các button có class=\".add-to-cart\"\n");
      out.write("    $(\".add-to-cart\").click(function () {\n");
      out.write("        var button = $(this); // Lấy đối tượng button mà người dùng click\n");
      out.write("        var id = button.attr(\"id\"); // id của sản phẩm là id của button\n");
      out.write("        var name = button.attr(\"data-name\"); // name của sản phẩm là thuộc tính data-name của button\n");
      out.write("        var price = button.attr(\"data-price\"); // price của sản phẩm là thuộc tính data-price của button\n");
      out.write("        var quantity = 1; // Số lượng\n");
      out.write("\n");
      out.write("\n");
      out.write("        var item = {\n");
      out.write("            id: id,\n");
      out.write("            name: name,\n");
      out.write("            price: price,\n");
      out.write("            quantity: quantity\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        var exists = false;\n");
      out.write("        if (shoppingCartItems.length > 0) {\n");
      out.write("            $.each(shoppingCartItems, function (index, value) {\n");
      out.write("                // Nếu mặt hàng đã tồn tại trong giỏ hàng thì chỉ cần tăng số lượng mặt hàng đó trong giỏ hàng.\n");
      out.write("                if (value.id == item.id) {\n");
      out.write("                    value.quantity++;\n");
      out.write("                    exists = true;\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Nếu mặt hàng chưa tồn tại trong giỏ hàng thì bổ sung vào mảng\n");
      out.write("        if (!exists) {\n");
      out.write("            shoppingCartItems.push(item);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Lưu thông tin vào sessionStorage\n");
      out.write("        sessionStorage[\"shopping-cart-items\"] = JSON.stringify(shoppingCartItems); // Chuyển thông tin mảng shoppingCartItems sang JSON trước khi lưu vào sessionStorage\n");
      out.write("        // Gọi hàm hiển thị giỏ hàng\n");
      out.write("        displayShoppingCartItems();\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    // Xóa hết giỏ hàng shoppingCartItems\n");
      out.write("    $(\"#button-clear\").click(function () {\n");
      out.write("        shoppingCartItems = [];\n");
      out.write("        sessionStorage[\"shopping-cart-items\"] = JSON.stringify(shoppingCartItems);\n");
      out.write("        $(\"#table-products > tbody\").html(\"\");\n");
      out.write("    });\n");
      out.write("\n");
      out.write("\n");
      out.write("    // Hiển thị giỏ hàng ra table\n");
      out.write("    function displayShoppingCartItems() {\n");
      out.write("        if (sessionStorage[\"shopping-cart-items\"] != null) {\n");
      out.write("            shoppingCartItems = JSON.parse(sessionStorage[\"shopping-cart-items\"].toString()); // Chuyển thông tin từ JSON trong sessionStorage sang mảng shoppingCartItems.\n");
      out.write("\n");
      out.write("            $(\"#table-products > tbody\").html(\"\");\n");
      out.write("            // Duyệt qua mảng shoppingCartItems để append từng item dòng vào table\n");
      out.write("            $.each(shoppingCartItems, function (index, item) {\n");
      out.write("                var htmlString = \"\";\n");
      out.write("                htmlString += \"<tr>\";\n");
      out.write("                htmlString += \"<td>\" + item.id + \"</td>\";\n");
      out.write("                htmlString += \"<td>\" + item.name + \"</td>\";\n");
      out.write("                htmlString += \"<td style='text-align: right'>\" + item.price + \"</td>\";\n");
      out.write("                htmlString += \"<td style='text-align: right'>\" + item.quantity + \"</td>\";\n");
      out.write("                htmlString += \"<td style='text-align: right'>\" + item.price * item.quantity + \"</td>\";\n");
      out.write("                htmlString += \"</tr>\";\n");
      out.write("\n");
      out.write("                $(\"#table-products > tbody:last\").append(htmlString);\n");
      out.write("\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
